---
- name: 'Install extra development tools'
  become: true
  become_user: 'root'
  ansible.builtin.package:
    state: 'present'
    name:
      # Basic debugging tools.
      - 'gdb'
      - 'valgrind'

      # VCS stuff that is unlikely to be needed.
      - 'git-delta'
      - 'subversion'
      - 'mercurial'

      # Mostly used for package building, specifically, AUR packages.
      - 'fakeroot'

      # Heavyweight stuff.
      - 'docker'
      - 'docker-compose'
      - 'podman'
      - 'buildah'
      - 'skopeo'

      # XXX: here we intentionally do not install any backend for Vagrant.
      # The easiest to use (and most probable) backend is a Virtualbox, however,
      # in Arch repos, it comes only in full form (headless one is only in AUR).
      #
      # Installing full VBox version is an overkill at this stage, so we either
      # wait for GUI roles to run (if any) or let the user to opt-in for this
      # bloatware explicitly. Finally, the user may choose to install another
      # hypervisor manually.
      #
      # If the user still wants the backend to be installed automatically,
      # they may supply the vagrant_backend option in the toolchain config.
      - 'vagrant'

      # Cloud clients.
      - 'kubectl'

      # Database clients.
      - 'mariadb-clients'
      - 'postgresql-libs'

- name: 'Install vagrant backend'
  when: '"vagrant_backend" in toolchain_config'
  ansible.builtin.include_tasks:
    file: 'vagrant_backends/{{ toolchain_config["vagrant_backend"] }}.yml'

- name: 'Install drop-ins for shells'
  tags: 'user'
  loop: '{{ user_config["shells"] | dict2items }}'
  ansible.builtin.copy:
    src: 'shell_dropins/{{ item["key"] }}/'
    dest: '{{ user_config["home_dir"] }}/{{ item["value"]["config_dropins_dir"] }}'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: '0644'

- name: 'Install drop-ins for editors'
  tags: 'user'
  loop: '{{ user_config["editors"] | dict2items | map(attribute="key") }}'
  loop_control:
    loop_var: 'editor_item'
  vars:
    editor: '{{ editor_item }}'
  ansible.builtin.include_tasks:
    file: 'editor_config.yml'
    apply:
      tags: 'user'
