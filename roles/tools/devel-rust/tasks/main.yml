---
- name: 'Find default toolchains'
  tags: 'user'
  ansible.builtin.set_fact:
    rustup_default_toolchains: >-
      {{
         toolchain_config.rustup_toolchains |
         selectattr("default", "defined") |
         selectattr("default") |
         map(attribute="name")
      }}

- name: 'Check that exactly one toolchain is default'
  tags: 'user'
  when: 'rustup_default_toolchains | length == 0 or rustup_default_toolchains | length > 1'
  ansible.builtin.fail:
    msg: 'Configuration error: exactly one Rust toolchain must be default!'

- name: 'Install rustup package'
  become: true
  become_user: 'root'
  ansible.builtin.package:
    state: 'present'
    name:
      - 'rustup'

- name: 'Install rust toolchains'
  tags: 'user'
  loop: '{{ toolchain_config.rustup_toolchains | map(attribute="name") }}'
  changed_when: true
  ansible.builtin.command:
    argv:
      - 'rustup'
      - 'toolchain'
      - 'install'
      - '{{ item }}'

- name: 'Set default rust toolchain'
  tags: 'user'
  changed_when: true
  ansible.builtin.command:
    cmd: 'rustup default {{ rustup_default_toolchains | first }}'

- name: 'Add mandatory rust components'
  tags: 'user'
  loop:
    - 'rust-src'
    - 'rust-docs'
    - 'rust-analyzer'
  register: 'rustup_add_result'
  changed_when: '"is up to date" not in rustup_add_result.stderr'
  ansible.builtin.command:
    cmd: 'rustup component add {{ item }}'

- name: 'Add user-requsted cargo components'
  tags: 'user'
  loop: '{{ toolchain_config.cargo_plugins }}'
  when: '"cargo_plugins" in toolchain_config'
  register: 'cargo_add_result'
  changed_when: '"is already installed" not in cargo_add_result.stderr'
  ansible.builtin.command:
    cmd: 'cargo install {{ item }}'
