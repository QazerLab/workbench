---
- name: 'Initialize youcompleteme build arguments'
  ansible.builtin.set_fact:
    ycm_build_args: '{{ plugin_config.default_build_args }}'

- name: 'Youcompleteme language support - C and C++'
  when: '"devel_basic" in user_config["toolchains"]'
  ansible.builtin.set_fact:
    ycm_build_args: '{{ ycm_build_args }} --clangd-completer'

- name: 'Youcompleteme language support - Golang'
  when: '"devel_go" in user_config["toolchains"]'
  ansible.builtin.set_fact:
    ycm_build_args: '{{ ycm_build_args }} --go-completer'

- name: 'Youcompleteme language support - Java'
  when: '"devel_java" in user_config["toolchains"]'
  ansible.builtin.set_fact:
    ycm_build_args: '{{ ycm_build_args }} --java-completer'

- name: 'Run youcompleteme build'
  changed_when: true
  args:
    chdir: '{{ plugin_dir }}'
  ansible.builtin.command:
    cmd: 'python3 install.py {{ ycm_build_args }}'

# XXX: here we diverge from YCM installation guide, which suggests installing
# whole toolchain into the temporary directory and then copy it into YCM dir.
# This is done to avoid syncing YCM with each rustup update - we just point YCM
# to the user's default rustup home, assuming that the toolchain is present.
- name: 'Youcompleteme language support - Rust'
  when: '"devel_rust" in user_config.toolchains'
  block:
    - name: 'YCM Rust - find default toolchain'
      ansible.builtin.set_fact:
        rustup_default_toolchain: >-
          {{
             user_config.toolchains.devel_rust.rustup_toolchains |
             selectattr("default", "defined") |
             selectattr("default") |
             map(attribute = "name") |
             first
          }}

    - name: 'YCM Rust - integrate YCM with Rust toolchain'
      ansible.builtin.file:
        path: '{{ plugin_dir }}/third_party/ycmd/third_party/rust-analyzer'
        src: '{{ user_config.home_dir }}/.rustup/toolchains/{{ rustup_default_toolchain }}'
        state: 'link'
