---
- name: 'Fail if role does not support target OS'
  when: >-
    ansible_os_family not in ['Archlinux', 'PureOS'] and (
      ansible_os_family in ['RedHat'] and
      ansible_architecture not in ['x86_64']
    )
  tags: 'user'
  ansible.builtin.fail:
    msg: >-
      This role does not yet support target distribution;
      target OS is: {{ ansible_os_family }} on {{ ansible_architecture }}.

- name: 'Install extra CLI tools'
  become: true
  become_user: 'root'
  ansible.builtin.package:
    state: 'present'
    name: '{{ tools_shell_extras_packages[ansible_os_family] }}'

- name: 'Install static binaries when packages are not available'
  when: 'ansible_os_family in ["RedHat", "PureOS"]'
  block:
    - name: 'Install fzf static binary'
      ansible.builtin.unarchive:
        src: '{{ tools_shell_extras_fzf_release }}'
        dest: '/usr/local/bin'
        remote_src: true

    - name: 'Ensure fzf shell completions directory exists'
      ansible.builtin.file:
        path: '/usr/share/fzf'
        owner: 'root'
        group: 'root'
        state: 'directory'
        mode: '0755'

    - name: 'Install fzf shell configurations'
      ansible.builtin.unarchive:
        src: '{{ tools_shell_extras_fzf_sources }}'
        dest: '/usr/share/fzf'
        remote_src: true
        extra_opts:
          - '--strip=2'
          - '--wildcards'
          - 'fzf-{{ tools_shell_extras_fzf_version }}/shell/*'

# XXX: Some distros seem to rename fd and bat in their packages to avoid name
# clash with already existing packages. We will probably never face this issue,
# so we make an attempt to make these binaries availabe via their original
# names by symlinking them from /usr/local/bin.
- name: 'Make renamed binaries available in PATH with their original names'
  when: 'ansible_os_family == "PureOS"'
  become: true
  become_user: 'root'
  block:
    - name: 'Symlink /usr/local/bin/fd to original package binary'
      ansible.builtin.file:
        path: '/usr/local/bin/fd'
        src: '/usr/lib/cargo/bin/fd'
        state: 'link'

    - name: 'Symlink /usr/local/bin/bat to original package binary'
      ansible.builtin.file:
        path: '/usr/local/bin/bat'
        src: '/usr/bin/batcat'
        state: 'link'

- name: 'Install profile drop-ins'
  tags: 'user'
  ansible.builtin.copy:
    src: 'profile_dropins/'
    dest: '{{ user_config.home_dir }}/{{ user_config.profile_dropins_dir }}'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: '0644'

- name: 'Install drop-ins for shells'
  tags: 'user'
  loop: '{{ user_config.shells | dict2items }}'
  ansible.builtin.copy:
    src: 'shell_dropins/{{ item.key }}/'
    dest: '{{ user_config.home_dir }}/{{ item.value.config_dropins_dir }}'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: '0644'

- name: 'Install drop-ins for editors'
  tags: 'user'
  loop: '{{ user_config.editors | dict2items | map(attribute="key") }}'
  loop_control:
    loop_var: 'editor_item'
  vars:
    editor: '{{ editor_item }}'
  ansible.builtin.include_tasks:
    file: 'editor_config.yml'
    apply:
      tags: 'user'
