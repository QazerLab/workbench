---
- name: 'Configure user {{ user_name }}'
  become: true
  become_user: '{{ user_name }}'
  block:
    - name: 'Print installation banner'
      tags: 'user'
      ansible.builtin.debug:
        msg:
          - '==============================================='
          - 'Configuring user: {{ user_name }}'
          - '==============================================='

    - name: 'Apply basic roles'
      tags: 'user'
      ansible.builtin.include_role:
        name: 'profile'

    - name: 'Install shells'
      tags: 'user'
      loop: '{{ user_config.shells | dict2items }}'
      loop_control:
        loop_var: 'shell_item'
      vars:
        shell_config: '{{ shell_item.value }}'
      ansible.builtin.include_role:
        name: 'shells/{{ shell_item.key }}'

    - name: 'Install editors'
      tags: 'user'
      loop: '{{ user_config.editors | dict2items }}'
      loop_control:
        loop_var: 'editor_item'
      vars:
        editor_config: '{{ editor_item.value }}'
      ansible.builtin.include_role:
        name: 'editors/{{ editor_item.key }}'

    - name: 'Install user`s desktop environment, if required'
      when: '"gui" in user_config and "de" in user_config.gui'
      tags: 'user'
      vars:
        de_config: '{{ user_config.gui.de }}'
      ansible.builtin.include_role:
        name: 'des/{{ user_config.gui.de.name }}'

    - name: 'Install toolchains required for user'
      tags: 'user'
      loop: '{{ user_config.toolchains | dict2items }}'
      loop_control:
        loop_var: 'toolchain_item'
      vars:
        toolchain_config: '{{ toolchain_item.value }}'
      ansible.builtin.include_role:
        name: 'tools/{{ toolchain_item.key }}'

    - name: 'Install standalone applications'
      tags: 'user'
      loop: '{{ user_config.apps | dict2items }}'
      loop_control:
        loop_var: 'app_item'
      vars:
        app_config: '{{ app_item.value }}'
      ansible.builtin.include_role:
        name: 'apps/{{ app_item.key }}'
