---
- name: 'install the whole suite'
  hosts: 'all'
  tasks:
    - name: 'fail if features are not set'
      fail:
        msg: 'Please define the desired feature flags in the "features" dictionary.'
      when: 'features is not defined'

    - name: 'apply basic roles'
      include_role:
        name: '{{ role_item }}'
      loop:
        - 'base/profile'
        - 'base/bash'
      loop_control:
        loop_var: 'role_item'

    - name: 'apply development roles'
      include_role:
        name: 'dev/{{ role_item }}'
      when: '"dev" in features and role_item in features["dev"]'
      loop:
        - 'base'
        - 'extras'
      #  - 'rust'
      #  - 'java'
        - 'golang'
      #  - 'haskell'
      loop_control:
        loop_var: 'role_item'

    # Though Vim is _obviously_ much more "basic" than development tools,
    # its plugins and configurations have too many dependencies on development
    # tools and runtimes, which could become a problem when we need not only Vim
    # itself, but also a handful of development plugins for it.
    #
    # To resolve this, let's install Vim a bit later that it should be installed.
    # If development tools are not installed, Vim will still go directly after other
    # base packages, but if they are, Vim will be installed when the environment is
    # ready for building and running the appropriate plugins.
    - name: 'install vim'
      include_role:
        name: 'base/vim'

    - name: 'apply GUI roles'
      include_role:
        name: '{{ role_item }}'
      when: '"gui" in features'
      loop:
        - 'gui/xresources'
        - 'gui/gtk2'
        - 'gui/gtk3'
        - 'gui/alacritty'
        - 'gui/tilda'
        - 'gui/gmrun'
        - 'gui/viewnior'
        - 'gui/galculator'
      loop_control:
        loop_var: 'role_item'

    # Things like WMs and DMs are intended to be replaceable with alternatives,
    # thus, each of them is optional by definition.
    - name: 'apply optional GUI roles'
      include_role:
        name: 'gui/{{ role_item }}'
      when: '"gui" in features and role_item in features["gui"]'
      loop:
        - 'openbox'
      loop_control:
        loop_var: 'role_item'
